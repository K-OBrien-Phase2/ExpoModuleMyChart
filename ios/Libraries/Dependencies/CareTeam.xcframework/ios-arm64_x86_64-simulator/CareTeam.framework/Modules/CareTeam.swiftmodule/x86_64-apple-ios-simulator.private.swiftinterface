// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
// swift-module-flags: -target x86_64-apple-ios16.2-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name CareTeam
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
@_exported import CareTeam
import DeveloperToolsSupport
import Foundation
import PECore
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc @_inheritsConvenienceInitializers public class PECareTeamComponentAPI : ObjectiveC.NSObject, PECore.PECareTeamComponentAPIProtocol {
  @objc public func hasAccessForCareTeam(_ patientContext: PECore.PEPatientContext) -> PECore.PEComponentAccessResult
  @objc public func getCareTeamViewController(_ patientContext: PECore.PEPatientContext, isPrimaryStandalone: Swift.Bool, withDelegate delegate: (any PECore.PECareTeamComponentDelegate)?)
  @objc public func hasAccessForTreatmentTeam(_ encounterContext: PECore.PEEncounterContext) -> PECore.PEComponentAccessResult
  @objc public func getTreatmentTeamViewController(_ encounterContext: PECore.PEEncounterContext, componentHost: any PECore.PEComponentHostProtocol, viewControllerTitle: Swift.String?) -> UIKit.UIViewController?
  @objc public func getFullscreenCareTeamViewController(_ patientContext: PECore.PEPatientContext, viewControllerTitle: Swift.String?) -> UIKit.UIViewController?
  @objc public func getTreatmentTeamListViewController(_ encounterContext: PECore.PEEncounterContext, componentHost: any PECore.PEComponentHostProtocol, viewControllerTitle: Swift.String?) -> UIKit.UIViewController?
  @objc public func hasAccessForProviderBio(_ encounterContext: PECore.PEEncounterContext) -> PECore.PEComponentAccessResult
  @objc public func getProviderBioViewController(_ encounterContext: PECore.PEEncounterContext, providerID: Swift.String, providerName: Swift.String) -> UIKit.UIViewController?
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor @preconcurrency public class PinImageView : UIKit.UIImageView {
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(image: UIKit.UIImage?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(image: UIKit.UIImage?, highlightedImage: UIKit.UIImage?)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func layoutSubviews()
  @objc deinit
}
