#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
#ifndef HOMEPAGE_SWIFT_H
#define HOMEPAGE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import PECore;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="HomePage",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)



SWIFT_CLASS("_TtC8HomePage18HPAbstractFeedItem")
@interface HPAbstractFeedItem : NSObject
/// without exposing this, all subclasses require a decoder-based init (and things like the loading card don’t need them)
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;
@class HPAction;
@class HPCareEverywhereInfo;

/// Foundational base class for a feed item with generic UI.
SWIFT_CLASS("_TtC8HomePage10HPFeedItem")
@interface HPFeedItem : HPAbstractFeedItem
/// The topic ID
@property (nonatomic) NSInteger topicId;
/// The main icon for the feed item
@property (nonatomic, copy) NSString * _Nullable iconKey;
/// The icon to overlay the main icon
@property (nonatomic, copy) NSString * _Nullable subIconKey;
/// Display text
@property (nonatomic, copy) NSString * _Nonnull displayText;
/// Main action
@property (nonatomic, strong) HPAction * _Nullable primaryAction;
/// Secondary action
@property (nonatomic, strong) HPAction * _Nullable secondaryAction;
/// Third action
@property (nonatomic, strong) HPAction * _Nullable tertiaryAction;
/// Default action
@property (nonatomic, strong) HPAction * _Nullable defaultAction;
/// Whether we want to show the water mark
@property (nonatomic) BOOL shouldShowWatermark;
/// Info for H2G
@property (nonatomic, strong) HPCareEverywhereInfo * _Nullable careEverywhereInfo;
/// without exposing this, all subclasses require a decoder-based init (and things like the loading card don’t need them)
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8HomePage24HPAccountSummaryFeedItem")
@interface HPAccountSummaryFeedItem : HPFeedItem
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum UriType : NSInteger;

/// A class that represents an action for a feed item
SWIFT_CLASS("_TtC8HomePage8HPAction")
@interface HPAction : NSObject
/// Link URI (encoded)
@property (nonatomic, copy) NSString * _Nullable uri;
/// Link Text
@property (nonatomic, copy) NSString * _Nullable displayText;
/// Is the  URI a dismiss action
@property (nonatomic) enum UriType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// The int backing these related to server side ints.  Client only should be a high number to prevent conflicts
typedef SWIFT_ENUM(NSInteger, UriType, open) {
  UriTypeUnknown = -1,
  UriTypeRedirect = 0,
  UriTypeInvisiblePost = 1,
  UriTypeSoftPost = 2,
  UriTypeHardPost = 3,
  UriTypeFdi = 4,
  UriTypePatientSwitch = 998,
  UriTypeReload = 999,
};


/// Model for upcoming appointments/visits
SWIFT_CLASS("_TtC8HomePage22HPAnnouncementFeedItem")
@interface HPAnnouncementFeedItem : HPFeedItem
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8HomePage22HPConversationFeedItem")
@interface HPConversationFeedItem : HPFeedItem
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol PEOrganizationInfoProtocol;

@interface HPConversationFeedItem (SWIFT_EXTENSION(HomePage)) <ProviderImageDataSource>
@property (nonatomic, readonly, copy) NSString * _Nonnull providerId;
@property (nonatomic, readonly) BOOL isProviderIdEncrypted;
@property (nonatomic, readonly) BOOL hasImageOnBlob;
@property (nonatomic, readonly, strong) id <PEOrganizationInfoProtocol> _Nonnull organization;
@property (nonatomic, readonly, copy) NSString * _Nonnull imageURL;
@end


/// Data model for a fast pass card
SWIFT_CLASS("_TtC8HomePage18HPFastPassFeedItem")
@interface HPFastPassFeedItem : HPFeedItem
/// The main title display text
@property (nonatomic, copy) NSString * _Nullable headerDisplayText;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@protocol UIViewControllerTransitionCoordinator;
@class NSBundle;
@class NSCoder;

/// The view controller responsible for the item feed
SWIFT_CLASS("_TtC8HomePage20HPFeedViewController")
@interface HPFeedViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@protocol PEH2GOrgPopupComponentAPIProtocol;

@interface HPFeedViewController (SWIFT_EXTENSION(HomePage)) <H2GErrorBannerViewDelegate>
- (void)didTapH2GBannerWithPopupComponent:(id <PEH2GOrgPopupComponentAPIProtocol> _Nonnull)popupComponent;
- (void)didCloseH2GBanner;
@end



@class UITableView;
@class NSIndexPath;
@class UITableViewCell;
@class UIView;
@class UIScrollView;

@interface HPFeedViewController (SWIFT_EXTENSION(HomePage)) <UITableViewDataSource, UITableViewDelegate>
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView * _Nonnull)scrollView;
@end

@class UIStoryboardSegue;

/// The view controller for displaying the home page
SWIFT_CLASS("_TtC8HomePage20HPMainViewController")
@interface HPMainViewController : UIViewController
/// By default, the homepage will attempt to hide the navigation bar when the view is visible, or when navigation back or logging out. It shows the navigation when navigating forward. Set this property to false if your application will manage the visibility of the navigation bar instead.
@property (nonatomic) BOOL shouldManageNavigationBarVisibility;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewWillAppear:(BOOL)animated;
- (void)prepareForSegue:(UIStoryboardSegue * _Nonnull)segue sender:(id _Nullable)sender;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (BOOL)accessibilityPerformMagicTap SWIFT_WARN_UNUSED_RESULT;
/// Forward all AX scrolls to place focus in the table view if it’s not currently active
- (BOOL)accessibilityScroll:(UIAccessibilityScrollDirection)direction SWIFT_WARN_UNUSED_RESULT;
/// Shows the navigation bar
- (void)showNavigationBar:(BOOL)shouldShow;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



@interface HPMainViewController (SWIFT_EXTENSION(HomePage)) <IOnboardingDelegate>
/// Dismisses onboarding and launches the proxy slash screen if the user has proxy subjects
/// \param shouldLaunchSplash whether the proxy splash screen should be launched following onboarding
///
- (void)onboardingDismissedWithActionCompleted:(BOOL)onboardingActionCompleted;
@end

@protocol PEComponentHostProtocol;

@interface HPMainViewController (SWIFT_EXTENSION(HomePage)) <PEHostableComponentViewController>
- (void)setComponentHost:(id <PEComponentHostProtocol> _Nonnull)componentHost;
- (BOOL)shouldHideComponentHostEpicLogoInNavBar SWIFT_WARN_UNUSED_RESULT;
@end



@class UIPresentationController;
@class UITraitCollection;

@interface HPMainViewController (SWIFT_EXTENSION(HomePage)) <UIPopoverPresentationControllerDelegate>
- (UIModalPresentationStyle)adaptivePresentationStyleForPresentationController:(UIPresentationController * _Nonnull)controller traitCollection:(UITraitCollection * _Nonnull)traitCollection SWIFT_WARN_UNUSED_RESULT;
- (BOOL)presentationControllerShouldDismiss:(UIPresentationController * _Nonnull)presentationController SWIFT_WARN_UNUSED_RESULT;
- (void)presentationControllerDidDismiss:(UIPresentationController * _Nonnull)presentationController;
@end





/// Model for H2G catch-all cell and anything in the future that displays text with some image media component
SWIFT_CLASS("_TtC8HomePage15HPMediaFeedItem")
@interface HPMediaFeedItem : HPFeedItem
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8HomePage21HPMenuAuditEventUtils")
@interface HPMenuAuditEventUtils : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (void)flushMenuAuditLogs;
@end


SWIFT_CLASS("_TtC8HomePage24HPMenuAuditWebServiceAPI")
@interface HPMenuAuditWebServiceAPI : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class HPMenuItem;

/// Represents an E2U menu record for the menu
SWIFT_CLASS("_TtC8HomePage11HPMenuGroup")
@interface HPMenuGroup : NSObject
@property (nonatomic, copy) NSArray<HPMenuItem *> * _Nonnull items;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Represents an E2U item record for the menu
SWIFT_CLASS("_TtC8HomePage10HPMenuItem")
@interface HPMenuItem : NSObject
@property (nonatomic, copy) NSString * _Nonnull launchUri;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8HomePage17HPMessageFeedItem")
@interface HPMessageFeedItem : HPFeedItem
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface HPMessageFeedItem (SWIFT_EXTENSION(HomePage)) <ProviderImageDataSource>
@property (nonatomic, readonly, copy) NSString * _Nonnull providerId;
@property (nonatomic, readonly) BOOL isProviderIdEncrypted;
@property (nonatomic, readonly) BOOL hasImageOnBlob;
@property (nonatomic, readonly, strong) id <PEOrganizationInfoProtocol> _Nonnull organization;
@property (nonatomic, readonly, copy) NSString * _Nonnull imageURL;
@end


/// Model for MyChart Central advertisement feed card
SWIFT_CLASS("_TtC8HomePage24HPMyChartCentralFeedItem")
@interface HPMyChartCentralFeedItem : HPFeedItem
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The view controller for displaying the MyChart Central v1 homepage
SWIFT_CLASS("_TtC8HomePage34HPMyChartCentralMainViewController")
@interface HPMyChartCentralMainViewController : UIViewController
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewWillAppear:(BOOL)animated;
- (void)prepareForSegue:(UIStoryboardSegue * _Nonnull)segue sender:(id _Nullable)sender;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (BOOL)accessibilityPerformMagicTap SWIFT_WARN_UNUSED_RESULT;
/// Shows the navigation bar
- (void)showNavigationBar:(BOOL)shouldShow;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface HPMyChartCentralMainViewController (SWIFT_EXTENSION(HomePage))
/// Called if the menu or MO homepage fails to load
- (void)onHomepageLoadingError;
@end



@interface HPMyChartCentralMainViewController (SWIFT_EXTENSION(HomePage)) <PEHostableComponentViewController>
- (void)setComponentHost:(id <PEComponentHostProtocol> _Nonnull)componentHost;
- (BOOL)shouldHideComponentHostEpicLogoInNavBar SWIFT_WARN_UNUSED_RESULT;
@end




@interface HPMyChartCentralMainViewController (SWIFT_EXTENSION(HomePage)) <UIPopoverPresentationControllerDelegate>
- (UIModalPresentationStyle)adaptivePresentationStyleForPresentationController:(UIPresentationController * _Nonnull)controller traitCollection:(UITraitCollection * _Nonnull)traitCollection SWIFT_WARN_UNUSED_RESULT;
- (BOOL)presentationControllerShouldDismiss:(UIPresentationController * _Nonnull)presentationController SWIFT_WARN_UNUSED_RESULT;
- (void)presentationControllerDidDismiss:(UIPresentationController * _Nonnull)presentationController;
@end



SWIFT_CLASS("_TtC8HomePage20HPMyChartNowFeedItem")
@interface HPMyChartNowFeedItem : HPFeedItem
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8HomePage21HPResultGroupFeedItem")
@interface HPResultGroupFeedItem : HPFeedItem
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A subject in the item feed
SWIFT_CLASS("_TtC8HomePage9HPSubject")
@interface HPSubject : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC8HomePage20HPTestResultFeedItem")
@interface HPTestResultFeedItem : HPFeedItem
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface HPTestResultFeedItem (SWIFT_EXTENSION(HomePage)) <ProviderImageDataSource>
@property (nonatomic, readonly, copy) NSString * _Nonnull providerId;
@property (nonatomic, readonly) BOOL isProviderIdEncrypted;
@property (nonatomic, readonly) BOOL hasImageOnBlob;
@property (nonatomic, readonly, strong) id <PEOrganizationInfoProtocol> _Nonnull organization;
@property (nonatomic, readonly, copy) NSString * _Nonnull imageURL;
@end


SWIFT_CLASS("_TtC8HomePage28HPToDoSuggestedTasksFeedItem")
@interface HPToDoSuggestedTasksFeedItem : HPFeedItem
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Model for upcoming appointments/visits
SWIFT_CLASS("_TtC8HomePage23HPUpcomingVisitFeedItem")
@interface HPUpcomingVisitFeedItem : HPFeedItem
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Model for video appointments/visits
SWIFT_CLASS("_TtC8HomePage20HPVideoVisitFeedItem")
@interface HPVideoVisitFeedItem : HPFeedItem
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Model for common details for visits
SWIFT_CLASS("_TtC8HomePage21HPVisitDisplayDetails")
@interface HPVisitDisplayDetails : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// A feed model item for when the feed is empty
SWIFT_CLASS("_TtC8HomePage19HPZeroStateFeedItem")
@interface HPZeroStateFeedItem : HPFeedItem
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@class PEUserContext;
@protocol PEPersonProtocol;
@class PEPatientContext;
@class WebServiceFailedError;

/// Public API for the Home Page component
SWIFT_CLASS("_TtC8HomePage22PEHomePageComponentAPI")
@interface PEHomePageComponentAPI : NSObject <PEHomePageComponentAPIProtocol>
/// Getter for the static menus
+ (NSDictionary<NSString *, NSArray<NSObject *> *> * _Nonnull)getStaticMenus SWIFT_WARN_UNUSED_RESULT;
/// Setter for the static menus
+ (void)setStaticMenusWithMenus:(NSDictionary<NSString *, NSArray<NSObject *> *> * _Nonnull)menus;
/// Can access the test bench
- (enum PEComponentAccessResult)hasAccessForHomePage:(PEUserContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
- (enum PEComponentAccessResult)hasAccessForHomePageMenuAudit:(PEUserContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isMenuViewController:(UIViewController * _Nullable)viewController SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nonnull)getHomePageFeedFor:(PEUserContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
- (void)setHealthFeedContext:(UIViewController * _Nonnull)feed person:(id <PEPersonProtocol> _Nonnull)person;
- (UIViewController * _Nonnull)getHomePageFor:(PEUserContext * _Nonnull)context with:(enum HomepageOverlayType)overlay presetPerson:(id <PEPersonProtocol> _Nullable)selectedPerson SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nonnull)getMyChartCentralHomePageFor:(PEUserContext * _Nonnull)context presetPerson:(id <PEPersonProtocol> _Nullable)selectedPerson SWIFT_WARN_UNUSED_RESULT;
- (void)invalidateFeed;
- (UIViewController * _Nonnull)getPersonalizeShortcutsViewControllerForUserContext:(PEUserContext * _Nonnull)userContext andPatientContext:(PEPatientContext * _Nonnull)patientContext SWIFT_WARN_UNUSED_RESULT;
- (enum PEComponentAccessResult)hasAccessForPersonalizeShortcuts:(PEUserContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPersonalizeShortcutsActivityTitle:(PEUserContext * _Nonnull)userContext :(PEPatientContext * _Nullable)patientContext SWIFT_WARN_UNUSED_RESULT;
- (void)notifyReloadMenu;
- (void)setAppleWatchCardDismissmal:(PEUserContext * _Nonnull)userContext :(BOOL)isDismissed;
- (void)preloadMenuWithCompletion:(void (^ _Nonnull)(BOOL, WebServiceFailedError * _Nonnull))completion;
- (BOOL)getOnboardingCompleteStatus:(PEUserContext * _Nonnull)userContext SWIFT_WARN_UNUSED_RESULT;
- (void)preventMenuFromReopeningUponReturn;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end










#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
