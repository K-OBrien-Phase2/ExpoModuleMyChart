#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
#ifndef AUTHENTICATION_SWIFT_H
#define AUTHENTICATION_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import PECore;
#endif

#import <Authentication/Authentication.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Authentication",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;

SWIFT_CLASS("_TtC14Authentication17AccessInformation")
@interface AccessInformation : NSObject
/// Allow Rx Refill - deprecated and can be removed when all customers 2019+
@property (nonatomic, readonly) BOOL allowRxRefill;
- (BOOL)featureEnabledFor:(NSString * _Nonnull)featureString SWIFT_WARN_UNUSED_RESULT;
- (BOOL)featureDisabledFor:(NSString * _Nonnull)featureString SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The response object from the authentication requests
SWIFT_CLASS("_TtC14Authentication20AuthenticateResponse")
@interface AuthenticateResponse : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum BiometricResult : NSInteger;

SWIFT_CLASS("_TtC14Authentication22BiometricAuthenticator")
@interface BiometricAuthenticator : NSObject
/// Registers generic biometric keychain item. This application-level item will require the user to authenticate biometrics when they attempt to access it.
///
/// throws:
/// AuthKeychainError if the key could not be added
+ (BOOL)registerGenericBiometricKeyAndReturnError:(NSError * _Nullable * _Nullable)error;
/// Accesses the generic biometric keychain item
/// \param prompt A prompt to display to the user
///
///
/// throws:
/// AuthKeychainError if the key could not be deleted
///
/// returns:
/// The value of the item
+ (NSString * _Nullable)readGenericBiometricKeyWithPrompt:(NSString * _Nonnull)prompt error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Delete generic biometric keychain item
///
/// throws:
/// AuthKeychainError if the key could not be deleted
///
/// returns:
/// A AuthBiometricResult indicating whether the user’s biometrics were authenticated
+ (BOOL)deleteGenericBiometricKeyAndReturnError:(NSError * _Nullable * _Nullable)error;
/// Attempt to authenticate the user’s biometrics.
/// \param prompt the prompt to display to the user
///
///
/// returns:
/// A AuthBiometricResult indicating whether the user’s biometrics were authenticated
+ (enum BiometricResult)authenticateBiometricsWithPrompt:(NSString * _Nonnull)prompt SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, BiometricResult, open) {
  BiometricResultAuthenticated = 0,
  BiometricResultCanceled = 1,
  BiometricResultFailed = 2,
};


/// Supported methods for login
typedef SWIFT_ENUM(NSInteger, LoginMethods, open) {
  LoginMethodsNone = 0,
  LoginMethodsPassword = 1,
  LoginMethodsBiometric = 2,
  LoginMethodsPasscode = 3,
  LoginMethodsAuthenticationToken = 4,
};

@class UIImage;

SWIFT_CLASS("_TtC14Authentication13MyChartPerson")
@interface MyChartPerson : NSObject <PEPersonProtocol>
/// Photo
@property (nonatomic, strong) UIImage * _Nullable photo;
/// The account ID of the person
@property (nonatomic, copy) NSString * _Nonnull accountId;
/// The allowed service areas for the person. This can happen in Finland environments where a person can have multiple EPTs for different service areas.
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull allowedServiceAreas;
/// accountIdType
@property (nonatomic) enum IDType accountIdType;
/// The color index for the user (For branding person color)
@property (nonatomic) NSInteger colorIndex;
/// The encrypted account ID of the person
@property (nonatomic, copy) NSString * _Nullable encryptedAccountId;
/// The home url for the person
@property (nonatomic, copy) NSString * _Nonnull homeUrl;
/// The legal name of the user
@property (nonatomic, copy) NSString * _Nonnull legalName;
/// The fullname of the user
@property (nonatomic, copy) NSString * _Nullable name;
/// photo blob resource ticket for the user
@property (nonatomic, copy) NSString * _Nullable photoBlobResourceTicket;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Sets the field to the new status
- (void)setFeatureLoadStatus:(enum FeatureLoadStatus)newStatus;
@end

@class NSDate;

/// Patient response object
SWIFT_CLASS("_TtC14Authentication14MyChartPatient")
@interface MyChartPatient : MyChartPerson <PEPatientProtocol>
/// Deprecated
@property (nonatomic) BOOL isCareCompanionEnrolled;
/// Deprecated
@property (nonatomic) BOOL isInED;
/// Deprecated
@property (nonatomic) BOOL isAdmitted;
/// Deprecated - remove when all customers 2019+
@property (nonatomic, readonly) BOOL allowRxRefill;
/// The internal ept id for the patient access
@property (nonatomic, copy) NSString * _Nullable internalPatientID;
/// If patient is considered a proxy of their own. This can happen in Finland environments where a patient can have multiple EPTs for multiple service areas and all those multiple EPTs have a self proxy relationship with the logged in user/patient.
@property (nonatomic) BOOL isSelfProxy;
/// Needs data from home deployment
@property (nonatomic) BOOL needsDataFromHomeDeployment;
/// relationshipID (remote subject ID)
@property (nonatomic, copy) NSString * _Nullable relationshipID;
/// relationship status as a string (is it close to expiring?)
@property (nonatomic, copy) NSString * _Nullable proxyRelationshipStatusString;
/// The user has access to this subject until this date
@property (nonatomic, copy) NSDate * _Nullable accessExpirationDate;
/// Boolean indicating if this session was launched with this context
@property (nonatomic) BOOL isContextForRedeemedOauthToken;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol PEAlertProtocol;

@interface MyChartPatient (SWIFT_EXTENSION(Authentication))
- (NSArray<id <PEAlertProtocol>> * _Nonnull)getAlerts SWIFT_WARN_UNUSED_RESULT;
@end


@interface MyChartPatient (SWIFT_EXTENSION(Authentication))
- (BOOL)getIsInED SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getIsAdmitted SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getNowContext SWIFT_WARN_UNUSED_RESULT;
- (void)setNowContext:(NSString * _Nonnull)nowContextId;
@end


@class UIColor;

@interface MyChartPerson (SWIFT_EXTENSION(Authentication))
- (UIColor * _Nonnull)getColor SWIFT_WARN_UNUSED_RESULT;
- (UIColor * _Nonnull)getTextColor SWIFT_WARN_UNUSED_RESULT;
@end


@interface MyChartPerson (SWIFT_EXTENSION(Authentication))
- (NSString * _Nonnull)getIdentifier SWIFT_WARN_UNUSED_RESULT;
- (BOOL)hasSecurityPoint:(NSString * _Nonnull)feature SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getEncryptedIdentifier SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getNickname SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getNicknamePreferingRefusalName:(BOOL)preferRefusalName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getFullname SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nullable)getPhotoOnImageLoaded:(void (^ _Nullable)(id <PEPersonProtocol> _Nonnull, UIImage * _Nullable))onImageLoaded SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nullable)getPhotoWithUseFallback:(BOOL)useFallback onImageLoaded:(void (^ _Nullable)(id <PEPersonProtocol> _Nonnull, UIImage * _Nullable))onImageLoaded SWIFT_WARN_UNUSED_RESULT;
- (enum FeatureLoadStatus)getFeatureLoadStatus SWIFT_WARN_UNUSED_RESULT;
- (enum IDType)getAccountIdType SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getWebServiceUrl:(enum UrlType)urlType SWIFT_WARN_UNUSED_RESULT;
- (void)updateNickname:(NSString * _Nullable)nickname;
- (void)updateColorIndex:(NSInteger)colorIndex;
- (void)updatePhoto:(UIImage * _Nullable)photo;
@end

enum WPEncryptionMethod : NSInteger;
@class SessionTicket;

SWIFT_CLASS("_TtC14Authentication11MyChartUser")
@interface MyChartUser : MyChartPerson <PEUserProtocol>
@property (nonatomic, readonly) EpicServicesAvailable2011 available2011Features;
@property (nonatomic, readonly) EpicServicesAvailable2012 available2012Features;
@property (nonatomic, readonly) EpicServicesAvailable2013 available2013Features;
@property (nonatomic, readonly) EpicServicesAvailable2014 available2014Features;
@property (nonatomic, readonly) EpicServicesAvailable2015 available2015Features;
@property (nonatomic, readonly) EpicServicesAvailable2016 available2016Features;
@property (nonatomic, readonly) EpicServicesAvailable2017 available2017Features;
@property (nonatomic, readonly) EpicServicesAvailable2018 available2018Features;
@property (nonatomic, readonly) EpicServicesAvailable2019 available2019Features;
@property (nonatomic, readonly) EpicServicesAvailable2020 available2020Features;
@property (nonatomic, readonly) EpicServicesAvailable2021 available2021Features;
@property (nonatomic, readonly) EpicServicesAvailable2022 available2022Features;
@property (nonatomic, readonly) EpicServicesAvailable2023 available2023Features;
@property (nonatomic, readonly) EpicServicesAvailable2024 available2024Features;
@property (nonatomic, readonly) EpicServicesAvailable2025 available2025Features;
/// The allowed hosts for the prelogin-page
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull allowedHosts;
/// The unencrypted username for Auth
@property (nonatomic, copy) NSString * _Nonnull username;
/// The banner logo file name if exists (can be null or empty)
@property (nonatomic, readonly, copy) NSString * _Nullable bannerLogoFileName;
/// Is the user a patient
@property (nonatomic, readonly) BOOL isPatient;
/// Method
@property (nonatomic, readonly) enum WPEncryptionMethod selectedEncryptionMethod;
/// The mychart branding configuration url to get configs
@property (nonatomic, readonly, copy) NSString * _Nullable myChartBrandingConfigurationUrl;
/// SSO Username for cache
@property (nonatomic, readonly, copy) NSString * _Nullable ssoUsernameForCache;
/// The Auth Ticket
@property (nonatomic, readonly, strong) SessionTicket * _Nullable ticket;
/// Boolean indicating if this session was launched with the user context
@property (nonatomic, readonly) BOOL launchedForTheUserContext;
/// If the current user can only access proxy subjects and not self-access
@property (nonatomic, readonly) BOOL isRestrictedToProxySubjectAccess;
/// List of patients (self access + proxy subjects)
@property (nonatomic, copy) NSArray<MyChartPatient *> * _Nonnull patientData;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface MyChartUser (SWIFT_EXTENSION(Authentication))
- (BOOL)isTimeout SWIFT_WARN_UNUSED_RESULT;
@end


@interface MyChartUser (SWIFT_EXTENSION(Authentication)) <PEPatientIndexProtocol>
- (NSInteger)getPatientIndex SWIFT_WARN_UNUSED_RESULT;
@end


@interface MyChartUser (SWIFT_EXTENSION(Authentication))
- (NSString * _Nonnull)getDeviceID SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCommandLocaleString SWIFT_WARN_UNUSED_RESULT;
- (void)setToken:(NSString * _Nonnull)token forType:(enum TokenType)tokenType;
- (NSString * _Nonnull)getToken:(enum TokenType)tokenType SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getUsername SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getFullname SWIFT_WARN_UNUSED_RESULT;
- (void)updatePhoto:(UIImage * _Nullable)photo;
- (void)updateNickname:(NSString * _Nullable)nickname;
- (void)updateColorIndex:(NSInteger)colorIndex;
- (id <PEPatientProtocol> _Nullable)getPatient SWIFT_WARN_UNUSED_RESULT;
@end


@class PEUserContext;
@protocol TwoFactorInformationProtocol;
@class UIViewController;
@class WebServiceFailedError;
@protocol RestrictedAccessTokenProtocol;
@protocol PEPhonebookEntryProtocol;
@protocol PEThemeProtocol;
@class PEPatientContext;

/// Component API for Authentication
SWIFT_CLASS("_TtC14Authentication28PEAuthenticationComponentAPI")
@interface PEAuthenticationComponentAPI : NSObject <PEAuthenticationComponentAPIProtocol>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull CustomServerId;)
+ (NSString * _Nonnull)CustomServerId SWIFT_WARN_UNUSED_RESULT;
/// PEAuthenticationComponentAPIProtocol
- (UIViewController * _Nullable)getViewControllerForTwoFactorAuthenticationWithContext:(PEUserContext * _Nonnull)userContext twoFactorInformation:(id <TwoFactorInformationProtocol> _Nonnull)twoFactorInformation completionHandler:(void (^ _Nullable)(BOOL, BOOL, BOOL))completionHandler SWIFT_WARN_UNUSED_RESULT;
/// PEAuthenticationComponentAPIProtocol
- (UIViewController * _Nullable)getViewControllerForTwoFactorEnrollmentWithContext:(PEUserContext * _Nonnull)userContext twoFactorInformation:(id <TwoFactorInformationProtocol> _Nonnull)twoFactorInformation completionHandler:(void (^ _Nullable)(BOOL, BOOL, BOOL))completionHandler SWIFT_WARN_UNUSED_RESULT;
/// PEAuthenticationComponentAPIProtocol
- (BOOL)supportsTwoFactorOptInWithContext:(PEUserContext * _Nonnull)userContext SWIFT_WARN_UNUSED_RESULT;
/// PEAuthenticationComponentAPIProtocol
- (void)loadTwoFactorInformationWithContext:(PEUserContext * _Nonnull)userContext completionHandler:(void (^ _Nonnull)(id <TwoFactorInformationProtocol> _Nullable))completionHandler errorHandler:(void (^ _Nonnull)(WebServiceFailedError * _Nonnull))errorHandler;
/// PEAuthenticationComponentAPIProtocol
- (UIViewController * _Nullable)getViewControllerForTwoFactorOptInWithContext:(PEUserContext * _Nonnull)userContext twoFactorInformation:(id <TwoFactorInformationProtocol> _Nonnull)twoFactorInformation completionHandler:(void (^ _Nullable)(BOOL, BOOL, BOOL))completionHandler SWIFT_WARN_UNUSED_RESULT;
/// PEAuthenticationComponentAPIProtocol
- (UIViewController * _Nullable)getViewControllerForTwoFactorOptInWithContext:(PEUserContext * _Nonnull)userContext deepLink:(NSString * _Nonnull)deepLink SWIFT_WARN_UNUSED_RESULT;
/// PEAuthenticationComponentAPIProtocol
- (UIViewController * _Nullable)getViewControllerForTwoFactorOnboardingWithContext:(PEUserContext * _Nonnull)userContext twoFactorInformation:(id <TwoFactorInformationProtocol> _Nullable)twoFactorInformation SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nonnull)getLoginViewController SWIFT_WARN_UNUSED_RESULT;
- (BOOL)hasRestrictedAccessTokenWithTokenType:(enum RestrictedAccessTokenType)tokenType forOrgId:(NSString * _Nullable)orgId SWIFT_WARN_UNUSED_RESULT;
- (id <RestrictedAccessTokenProtocol> _Nullable)getRestrictedAccessTokenWithTokenType:(enum RestrictedAccessTokenType)tokenType SWIFT_WARN_UNUSED_RESULT;
- (void)loginWithRestrictedAccessTokenWithTokenType:(enum RestrictedAccessTokenType)tokenType phonebookEntry:(id <PEPhonebookEntryProtocol> _Nonnull)phonebookEntry defaultTheme:(id <PEThemeProtocol> _Nonnull)defaultTheme completionHandler:(void (^ _Nonnull)(PEPatientContext * _Nonnull))completionHandler errorHandler:(void (^ _Nonnull)(NSString * _Nonnull))errorHandler;
- (void)createRestrictedAccessTokenWithUserContext:(PEUserContext * _Nonnull)userContext tokenType:(enum RestrictedAccessTokenType)tokenType username:(NSString * _Nonnull)username completionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
- (void)removeRestrictedAccessTokenFromDeviceWithTokenType:(enum RestrictedAccessTokenType)tokenType;
- (void)removeRestrictedAccessTokenFromDeviceAndServerWithTokenType:(enum RestrictedAccessTokenType)tokenType userContext:(PEUserContext * _Nonnull)userContext;
- (void)recreateRestrictedAccessTokenIfNeededWithUserContext:(PEUserContext * _Nonnull)userContext tokenType:(enum RestrictedAccessTokenType)tokenType username:(NSString * _Nonnull)username completionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
- (void)clearCurrentRestrictedAccessSession;
- (BOOL)hasCurrentRestrictedAccessSession SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getSamlToken SWIFT_WARN_UNUSED_RESULT;
/// Returns a list of the favorite orgs
/// @return
- (NSArray<id <PEPhonebookEntryProtocol>> * _Nonnull)getFavoritedOrgs SWIFT_WARN_UNUSED_RESULT;
/// Returns a list of the favorite orgs
/// @return
- (void)setFavoritedOrgsWithOrgs:(NSArray<id <PEPhonebookEntryProtocol>> * _Nonnull)orgs;
- (void)executeOrgSelectDeeplinkWithOrgId:(NSString * _Nonnull)orgId;
/// Updates the patient access list with feature access information from H2G organizations we have already heard back from
- (void)getCurrentFeatureAccessInformation;
/// Waits for all H2G organizations to respond and updates the patient access list with feature access information from those orgs
- (void)getFullFeatureAccessInformationWithCompletion:(void (^ _Nullable)(BOOL))completion;
/// Fetches the feature load status from the patient access list for a given account ID
- (enum FeatureLoadStatus)getFeatureLoadStatusForPatientWithAccountID:(NSString * _Nonnull)accountID SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) id <PEThemeProtocol> _Nullable currentPreLoginTheme;
- (void)launchLoginWorkflowWithOrgId:(NSString * _Nonnull)orgId;
@property (nonatomic, readonly) BOOL shouldSkipOnboardingOrgSelectionStep;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC14Authentication18SamlSessionManager")
@interface SamlSessionManager : NSObject
/// Caches the logout url for the external logout jump
/// @param logoutUrl
+ (void)setExternalLogoutUrl:(NSString * _Nullable)logoutUrl;
/// Clear the external logout url
+ (void)clearExternalLogoutUrl;
/// Get the external logout url
/// @return
+ (NSString * _Nullable)getExternalLogoutUrl SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Session token used to authenticate web services
SWIFT_CLASS("_TtC14Authentication13SessionTicket")
@interface SessionTicket : NSObject
/// The actual ticket, encrypted if necessary
@property (nonatomic, readonly, copy) NSString * _Nonnull value;
/// Mechanism for encryption
@property (nonatomic, readonly) enum WPEncryptionMethod encryptionMethod;
/// Instantiate a new ticket. If ticket is nil/empty, constructor returns nil
- (nullable instancetype)initWithTicket:(NSString * _Nullable)ticket andEncryptionMethod:(enum WPEncryptionMethod)encryptionMethod;
/// Set the value to the new ticket (encrypting if necessary)
- (void)updateTicket:(NSString * _Nonnull)newTicket;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Terms and Conditions status sent from the server
typedef SWIFT_ENUM(NSInteger, ShowTerms, open) {
  ShowTermsDoNotShow = 0,
  ShowTermsNew = 1,
  ShowTermsUpdated = 2,
  ShowTermsProxyDisclaimer = 3,
};

/// Types of behavior for terms and conditions UI
typedef SWIFT_ENUM(NSInteger, TermsType, open) {
/// Matches ShowTermsDoNotShow
  TermsTypeDoNotShow = -1,
/// Matches ShowTermsNew and ShowTermsUpdated
  TermsTypeShowTermsAndConditions = 0,
/// Matches ShowTermsProxyDisclaimer
  TermsTypeShowProxyDisclaimer = 1,
/// Used for showing the onboarding EULA
  TermsTypeShowEula = 2,
};


SWIFT_RESILIENT_CLASS("_TtC14Authentication38TwoFactorOptInWebViewControllerManager")
@interface TwoFactorOptInWebViewControllerManager : MyChartWebViewControllerManager
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





typedef SWIFT_ENUM(NSInteger, WPEncryptionMethod, open) {
  WPEncryptionMethodNoEncryption = 1,
  WPEncryptionMethodAes128 = 2,
};

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
