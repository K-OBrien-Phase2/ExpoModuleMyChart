// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
// swift-module-flags: -target arm64-apple-ios16.2-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name InfectionControl
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import DeveloperToolsSupport
import Foundation
@_exported import InfectionControl
import PECore
import PassKit
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_inheritsConvenienceInitializers @objc public class PEInfectionControlComponentAPI : ObjectiveC.NSObject, PECore.PEInfectionControlComponentAPIProtocol {
  @objc public func hasAccessForCovidStatus(_ patientContext: PECore.PEPatientContext) -> PECore.PEComponentAccessResult
  @objc public func hasAccessForPreloginCovidStatus(_ patientContext: PECore.PEPatientContext) -> PECore.PEComponentAccessResult
  @objc public func getCovidStatusController(_ patientContext: PECore.PEPatientContext, viewControllerTitle: Swift.String?) -> UIKit.UIViewController?
  @objc public func getCovidStatusViewModel(_ patientContext: PECore.PEPatientContext, successHandler: @escaping (ObjectiveC.NSObject) -> Swift.Void, failureHandler: @escaping (PECore.WebServiceFailedError) -> Swift.Void) -> ObjectiveC.NSObject?
  @objc public func getPreloginCovidStatusWidget(_ phonebookEntry: any PECore.PEPhonebookEntryProtocol, defaultTheme: any PECore.PEThemeProtocol, presentingViewController: UIKit.UIViewController?, existingLiveModel: PECore.PELiveModel?) -> UIKit.UIView?
  @objc public func getCovidPreloginOnboardingController(_ patientContext: PECore.PEPatientContext, _ onboardingDelegate: any PECore.IOnboardingDelegate) -> UIKit.UIViewController?
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @IBDesignable @_Concurrency.MainActor @preconcurrency open class ICSelfLoadingView : UIKit.UIView {
  @_Concurrency.MainActor @preconcurrency open var selfLoadingNibName: Swift.String? {
    get
  }
  @_Concurrency.MainActor @preconcurrency open var bundle: Foundation.Bundle {
    get
  }
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor @preconcurrency open func createView()
  @objc deinit
}
@objc @_Concurrency.MainActor @preconcurrency open class CovidPreloginConfirmationViewController : UIKit.UIViewController {
  @_Concurrency.MainActor @preconcurrency required public init(overrideNibName: Swift.String? = nil, overrideBundle: Foundation.Bundle? = nil, context: PECore.PEUserContext, parentPageViewController: PECore.PEOnboardingHostViewController, canGoBack: Swift.Bool, isLast: Swift.Bool)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic open func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic open func viewDidAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor @preconcurrency open func setViewStrings()
  @objc deinit
}
extension InfectionControl.CovidPreloginConfirmationViewController : PECore.IOnboardingNavigationDelegate {
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func actionTapped()
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func backTapped()
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func nextTapped()
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func playTapped()
}
