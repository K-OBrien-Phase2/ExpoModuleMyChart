#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
#ifndef MYCHARTGLOBALS_SWIFT_H
#define MYCHARTGLOBALS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
#endif

#import <MyChartGlobals/MyChartGlobals.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="MyChartGlobals",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

/// Delegate protocol for being notified when the appointment arrrival check-in workflow is finished/canceled.
SWIFT_PROTOCOL("_TtP14MyChartGlobals36IWPAppointmentArrivalCheckInDelegate_")
@protocol IWPAppointmentArrivalCheckInDelegate
/// Callback upon completion of the appointment check-in workflow.
/// \param arrivalStatus Enum value describing the status of the appointment
///
- (void)didFinishCheckInWorkflowWith:(WPAPIAppointmentArrivalStatus)status;
/// Callback upon cancellation of the appointment check-in workflow.
- (void)didCancelCheckInWorkflow;
@end

@class NSURLRequest;
@class NSString;

/// Delegate protocol for creating a custom MyChart URL.
SWIFT_PROTOCOL("_TtP14MyChartGlobals27IWPCreateMyChartUrlDelegate_")
@protocol IWPCreateMyChartUrlDelegate
/// Callback upon url creation success. The URL Request will be pointing to the URL for the requested mode and will contain any necessary html body elements.
/// \param urlRequest the URL request to pass to a webview
///
/// \param allowedHosts The URL hosts that should be allowlisted for the webpage that will be displayed.
///
- (void)createdUrlRequest:(NSURLRequest * _Nonnull)urlRequest allowedHosts:(NSArray<NSString *> * _Nonnull)allowedHosts;
/// Callback upon failure to create a MyChart URL.
/// \param errorMessage message describing the reason for failure.
///
- (void)urlCreationFailed:(NSString * _Nonnull)errorMessage;
@end

@protocol IWPAppointment;

/// Delegate protocol for being notified when a patient arrives for an appointment.
SWIFT_PROTOCOL("_TtP14MyChartGlobals38IWPMonitoredAppointmentArrivalDelegate_")
@protocol IWPMonitoredAppointmentArrivalDelegate
/// Callback upon patient arrival at a monitored appointment.
/// \param appointment The appointment for which the patient arrived.
///
- (void)didArriveForMonitoredAppointment:(id <IWPAppointment> _Null_unspecified)appointment;
@end


/// Delegate protocol for updating an appointment that is being monitored for arrival.
SWIFT_PROTOCOL("_TtP14MyChartGlobals37IWPMonitoredAppointmentUpdateDelegate_")
@protocol IWPMonitoredAppointmentUpdateDelegate
/// Callback upon completion of updates for current monitored appointment.
/// \param appointment The appointment that is currently being monitored. Can be nil if no appointment is being monitored.
///
- (void)didFinishUpdateWithMonitoredAppointment:(id <IWPAppointment> _Nullable)appointment;
@end


/// This API provides hooks into idle timer expiration
SWIFT_PROTOCOL("_TtP14MyChartGlobals24IWPOnIdleTimeoutDelegate_")
@protocol IWPOnIdleTimeoutDelegate
/// Called when the idle timer fires, before the logout logic and the starting of the idle timer activity
- (void)onIdleTimeout;
/// Called when the idle timer fires, but after the logout logic is called and the starting of the idle timer activity. It is possible for the logout logic and the starting of the idle timer not to fire, if the application is in the background.
- (void)onIdleTimeoutComplete;
@end


/// This delegate provides hooks into the MyChart logout sequence
SWIFT_PROTOCOL("_TtP14MyChartGlobals19IWPOnLogoutDelegate_")
@protocol IWPOnLogoutDelegate
/// Logout has begun, and in most cases the session will still be active
- (void)onLogoutStarted;
/// This is called when your application should dismiss/pop controllers on the UI back to your login screen
///
/// returns:
/// return true indicate that you have handled the unwind sequence. If you use Epic’s standard homepage, in most cases that can unwind the UI for you
- (BOOL)unwindToLoginScreen SWIFT_WARN_UNUSED_RESULT;
@end

@protocol IWPPerson;
@class NSError;

/// Delegate protocol for being notified when operations are complete, successfully or otherwise.
SWIFT_PROTOCOL("_TtP14MyChartGlobals24IWPPersonManagerDelegate_")
@protocol IWPPersonManagerDelegate
@optional
/// Delegate method invoked when the operation to set a color for a person has completed, successfully or otherwise.
/// \param person the person for which the color was set
///
/// \param error the error that occurred if the operation failed
///
- (void)didSetColorForPerson:(id <IWPPerson> _Nonnull)person withError:(NSError * _Nullable)error;
/// Delegate method invoked when the operation to set a nickname for a person has completed, successfully or otherwise.
/// \param person the person for which the nickname was set
///
/// \param error the error that occurred if the operation failed
///
- (void)didSetNicknameForPerson:(id <IWPPerson> _Nonnull)person withError:(NSError * _Nullable)error;
/// Delegate method invoked when the operation to set a photo for a person has completed, successfully or otherwise.
/// \param person the person for which the photo was set
///
/// \param error the error that occurred if the operation failed
///
- (void)didSetPhotoForPerson:(id <IWPPerson> _Nonnull)person withError:(NSError * _Nullable)error;
@end

enum WPAPISetPushNotificationsStatusResult : NSInteger;
enum WPAPIPushNotificationsStatus : NSInteger;

/// Delegate protocol for being notified of Push Notifications status changes.
SWIFT_PROTOCOL("_TtP14MyChartGlobals28IWPPushNotificationsDelegate_")
@protocol IWPPushNotificationsDelegate
/// Callback method when Push Notifications toggling is complete
/// \param status the WPAPISetPushNotificationsStatusResult value as a result of the toggle operation
///
- (void)setPushNotificationsReturnedWith:(enum WPAPISetPushNotificationsStatusResult)status;
/// Callback method when Push Notifications status has been determined
/// \param status the WPAPIPushNotificationsStatus value as the result
///
- (void)pushNotificationsReturnedWith:(enum WPAPIPushNotificationsStatus)status;
@end

/// Enum representing the various access result values for accessing MyChart standard activities.
typedef SWIFT_ENUM(NSInteger, WPAPIAccessResult, open) {
/// Allowed to access
  WPAPIAccessResultAccessAllowed = 1,
/// User is not logged in
  WPAPIAccessResultNotAuthenticated = 2,
/// Web service is not available
  WPAPIAccessResultMissingServerUpdate = 3,
/// Lacks required security points
  WPAPIAccessResultMissingSecurity = 4,
/// Lacks necessary app-level settings, like Location Services permissions
  WPAPIAccessResultMissingAppPermissions = 5,
/// User has manually disabled an in-app setting at the User level, preventing access
  WPAPIAccessResultUserDisabledSetting = 6,
/// Activity is deprecated
  WPAPIAccessResultDeprecated = 7,
/// The user’s device does not support this feature.
  WPAPIAccessResultDeviceVersionNotSupported = 8,
/// Security couldn’t be validated; the corresponding activity should only be launched if it is reasonable to expect that the user should have access
  WPAPIAccessResultUnknown = 9,
/// The homepage menus weren’t loaded, and are required to validate security for the given activity. Check the setting LoadHomepageMenus in the SettingsForLibraryBuilds property list
  WPAPIAccessResultMenusNotLoaded = 10,
/// Lacks required security points, but security has not yet finished loading
  WPAPIAccessResultSecurityNotLoaded = 11,
};

/// Enum representing the current status of the Appointment Arival Feature (“Hello Patient”).
typedef SWIFT_ENUM(NSInteger, WPAPIAppointmentArrivalFeatureStatus, open) {
/// Appointment Arrival is turned off
  WPAPIAppointmentArrivalFeatureStatusDisabled = 1,
/// Appointment Arrival onboarding has not been shown
  WPAPIAppointmentArrivalFeatureStatusOnboardingNotShown = 2,
/// Appointment Arrival is missing the required setup (e.g. location permissions)
  WPAPIAppointmentArrivalFeatureStatusMissingSetupRequirement = 3,
/// Appointment Arrival is turned on
  WPAPIAppointmentArrivalFeatureStatusEnabled = 4,
};

/// Enum representing the various self-arrival mechanisms by which a user can be arrived to an appointment.
/// Values loosely map to category values from I EPT 7345.
typedef SWIFT_ENUM(NSInteger, WPAPIAppointmentSelfArrivalMechanism, open) {
/// The arrival workflow for this appointment was initiated automatically using geolocation
  WPAPIAppointmentSelfArrivalMechanismGeolocation = 1,
/// The arrival workflow for this appointment was initiated automatically using Bluetooth beacons
  WPAPIAppointmentSelfArrivalMechanismBluetoothBeacons = 2,
/// The arrival workflow for this appointment was initiated manually by the user, without the use of location technology
  WPAPIAppointmentSelfArrivalMechanismUserInitiated = 3,
};

/// Enum representing the current authentication status of the user.
typedef SWIFT_ENUM(NSInteger, WPAPIAuthenticationStatus, open) {
/// The user is not logged in, or has timed out.
  WPAPIAuthenticationStatusNotAuthenticated = 0,
/// The user has logged in, but does not have a fully valid authentication ticket, such as during the terms and conditions, or 2FA enrollement workflows.
  WPAPIAuthenticationStatusLimitedAuthentication = 1,
/// The user is fully logged in.
  WPAPIAuthenticationStatusFullyAuthenticated = 2,
};

/// Enum representing the result for an attempted execution of a deep link
typedef SWIFT_ENUM(NSInteger, WPAPIDeepLinkExecuteResult, open) {
/// Deep link was successfully executed
  WPAPIDeepLinkExecuteResultExecuteSuccess = 0,
/// Deep link failed due to invalid activity
  WPAPIDeepLinkExecuteResultExecuteFailedUnknown = 1,
/// Deep link failed due to not being supported
  WPAPIDeepLinkExecuteResultExecuteFailedUnsupported = 2,
/// Deep link failed due to the user not having security access
  WPAPIDeepLinkExecuteResultExecuteFailedNoSecurity = 3,
/// Deep link failed due to bad URL
  WPAPIDeepLinkExecuteResultExecuteFailedBadURL = 4,
/// Deep link failed due to patient mismatch
  WPAPIDeepLinkExecuteResultExecuteFailedPatientNotCurrent = 5,
/// Deep link failed due to invalid patient
  WPAPIDeepLinkExecuteResultExecuteFailedPatientNotFound = 6,
/// Deep link failed due to mismatched organization
  WPAPIDeepLinkExecuteResultExecuteFailedMismatchedOrganization = 7,
/// Deep link failed due to being unable to execute as it is invalid
  WPAPIDeepLinkExecuteResultExecuteFailedUnableToExecute = 8,
/// Deep link failed due to Happy Together incompatibility
  WPAPIDeepLinkExecuteResultExecuteFailedH2GUnsupported = 9,
/// Deep link failed due to attempting to execute logout
  WPAPIDeepLinkExecuteResultExecuteFailedLogout = 10,
/// Deep link pending until login success
  WPAPIDeepLinkExecuteResultExecutePendingLogin = 11,
/// Deep link pending until data from server is recieved
  WPAPIDeepLinkExecuteResultExecutePendingRetrievingData = 12,
/// Deep link failed due to an internal-only URL being launched from outside the app
  WPAPIDeepLinkExecuteResultExecuteFailedExternalLinkUnsupported = 13,
/// Deep link failed due to another being in execution
  WPAPIDeepLinkExecuteResultExecuteFailedOtherDeepLinkInProgress = 15,
/// Deep link failed due to security being out of date
  WPAPIDeepLinkExecuteResultExecuteFailedSecurityOutOfDate = 16,
/// Deep link pending until features are updated
  WPAPIDeepLinkExecuteResultExecutePendingUpdatedSecurity = 17,
/// Deep link failed due to attempting to execute outside of the UI thread
  WPAPIDeepLinkExecuteResultExecuteFailedNotOnUIThread = 18,
};

/// Enum representing the various login error codes that indicate possible failure states after login attempts.
typedef SWIFT_ENUM(NSInteger, WPAPILoginResult, open) {
/// Unknown error occurred
  WPAPILoginResultUnknown = -1,
/// Unknown error occurred
  WPAPILoginResultSuccess = 1,
/// Unknown error occurred
  WPAPILoginResultExpiredTestLibrary = 2,
/// Unknown error occurred
  WPAPILoginResultWebserviceError = 3,
/// Unknown error occurred
  WPAPILoginResultGenericError = 4,
/// Unknown error occurred
  WPAPILoginResultMaxAttemptsExceeded = 5,
/// Unknown error occurred
  WPAPILoginResultMaxPasswordResetTriesReached = 6,
/// Unknown error occurred
  WPAPILoginResultReadOnlyServer = 7,
/// Unknown error occurred
  WPAPILoginResultPasswordExpired = 8,
/// Unknown error occurred
  WPAPILoginResultTermsAndConditionsFailed = 10,
/// Unknown error occurred
  WPAPILoginResultTwoFactorFailed = 11,
/// Unknown error occurred
  WPAPILoginResultPasswordExpiredFailed = 12,
/// Unknown error occurred
  WPAPILoginResultUsernamePasswordFailed = 13,
/// Unknown error occurred
  WPAPILoginResultLoginInactive = 14,
/// Unknown error occurred
  WPAPILoginResultLoginDeleted = 15,
/// Unknown error occurred
  WPAPILoginResultLoginExpired = 16,
/// Unknown error occurred
  WPAPILoginResultLoginServerError = 17,
/// Unknown error occurred
  WPAPILoginResultProxyOnly = 18,
/// Unknown error occurred
  WPAPILoginResultAppVersionTooLow = 19,
/// Unknown error occurred
  WPAPILoginResultSecondaryLoginInvalidAuthToken = 20,
/// Unknown error occurred
  WPAPILoginResultSecondaryLoginPasswordChanged = 21,
/// Unknown error occurred
  WPAPILoginResultMaxPasswordExceededCanReset = 22,
/// Unknown error occurred
  WPAPILoginResultMaxPasswordExceededCannotReset = 23,
/// Unknown error occurred
  WPAPILoginResultNetworkNotAvailable = 24,
/// Unknown error occurred
  WPAPILoginResultUserCanceled = 25,
/// Unknown error occurred
  WPAPILoginResultPasscodeNotSet = 7002,
/// Unknown error occurred
  WPAPILoginResultTouchIDFailed = 7004,
/// Unknown error occurred
  WPAPILoginResultTouchIDNotAvailable = 7005,
/// Unknown error occurred
  WPAPILoginResultMustUsePassword = 7007,
/// Unknown error occurred
  WPAPILoginResultSecondaryLoginIncorrectPasscode = 10000,
/// Unknown error occurred
  WPAPILoginResultSecondaryLoginIncorrectPasscodeDisabled = 10001,
/// Unknown error occurred
  WPAPILoginResultSecondaryLoginMethodDisabled = 10007,
};

/// Enum representing various new features for which an alert will be displayed to onboard the user.
typedef SWIFT_ENUM(NSInteger, WPAPINewFeatureKey, open) {
/// Feature that allows patients to link their accounts with other organizations
  WPAPINewFeatureKeyHappyTogether = 0,
/// Feature that allows patients to grant acess to their friends and family
  WPAPINewFeatureKeyFamilyAccess = 1,
};

/// Enum representing the current status of push notifications.
typedef SWIFT_ENUM(NSInteger, WPAPIPushNotificationsStatus, open) {
/// Push Notifications are On
  WPAPIPushNotificationsStatusOn = 1,
/// Push Notifications are Off
  WPAPIPushNotificationsStatusOff = 2,
/// Push Notifications are not supported
  WPAPIPushNotificationsStatusNotSupported = 3,
};

/// Enum representing the various error codes returned when requesting access to activities asynchronously (see WPAPIGoals and WPAPICareTeam).
typedef SWIFT_ENUM(NSInteger, WPAPIRequestControllerErrorCode, open) {
/// The request for a controller failed for an unknown reason
  WPAPIRequestControllerErrorCodeUnknown = -1,
/// The user does not have access to the activity. Check the WPAPIActivityAccessResultKey in the error userInfo for the access result.
  WPAPIRequestControllerErrorCodeNoAccess = 1,
/// There is no data to display for the requested activity.
  WPAPIRequestControllerErrorCodeNoData = 2,
};

/// Enum representing the various result statuses when attempting to toggle Push Notifications.
typedef SWIFT_ENUM(NSInteger, WPAPISetPushNotificationsStatusResult, open) {
/// Push Notifications were turned on successfully
  WPAPISetPushNotificationsStatusResultTurnedOn = 0,
/// Push Notifications could not be turned on
  WPAPISetPushNotificationsStatusResultFailedToTurnOn = 1,
/// Push Notifications were turned off successfully
  WPAPISetPushNotificationsStatusResultTurnedOff = 2,
/// Push Notifications could not be turned off
  WPAPISetPushNotificationsStatusResultFailedToTurnOff = 3,
/// Push Notifications are not supported
  WPAPISetPushNotificationsStatusResultNotSupported = 4,
};

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
