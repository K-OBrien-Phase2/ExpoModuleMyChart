//
//  WPKeychainItem.h
//  MyChart
//
//  Created by Ben Drda on 4/15/15.
//  Copyright Â© 2020-2023 Epic Systems Corporation. All rights reserved.
//

#import <Foundation/Foundation.h>

/*! Block called when retrieve a payload */
typedef void (^WPKeychainItemPayloadBlock)(NSData *payload, NSError *error);
/*! Block called when we perform a keychain task */
typedef void (^WPKeychainItemOperationBlock)(BOOL success, NSError *error);


typedef NS_ENUM(NSInteger, WPKeychainItemErrorCode)
{
    kWPKeychainItemErrorCodeStatus,
};

typedef NS_ENUM(NSUInteger, WPKeychainItemType)
{
    kWPKeychainItemTypeLogin,
};

/*! domain for errors generated by this object */
static NSString *const kWPKeychainItemErrorDomain = @"com.epic.mychart.framework.keychainitem";
/*! key for the OSStatus when a keychain operation returns an error (not noErr) */
static NSString *const kWPKeychainItemErrorUserInfoKeyOSStatus = @"com.epic.mychart.framework.keychainitem.osstatus";

@interface WPKeychainItem : NSObject

/*! 
 @brief given a service and an access group, create a query object, retrieve or create the keychain item attributes
 @param service what's stored in kSecAttrService in the keychain
 */
- (instancetype)initWithService:(NSString *)service;
/*!
 @brief if you've already performed a query to get a keychain item, give us the attribute result to populate a keychain item
 @param secItem what's stored in the keychain for this item
 */
- (instancetype)initWithSecItem:(NSDictionary *)secItem;

/*!
 @brief store the dictionary of items with keys allowable in a generic password keychain. updates both the cache and the disk
 @param dictionary the keys/values pairs to update in the keychain
 @param block the completion block to call. will be called on the same thread
 */
- (void)storeObjects:(NSDictionary *)dictionary withBlock:(WPKeychainItemOperationBlock)block;

/*!
 @brief retrieve the object stored under the given key in the keychain. will access the cached copy from memory, so it should be a speedy operation
 @param key the key
 */
- (id)objectForKey:(id <NSCopying>)key;

/*!
 @brief retrieves the encrypted password keychain from disk. is a blocking operation.
 @param block called when the password is retrieved and decrypted on the same thread.
 */
- (void)getPayloadWithBlock:(WPKeychainItemPayloadBlock)block;

/*!
 @brief encrypt and store the given payload with any updated attributes to disk. will create an OS keychain item if non exists. is a blocking operation.
 @param data the payload to encrypt and store in the keychain
 @param attributes key/value pairs to store in the keychain with the payload with keys allowable in a generic password keychain.
 @param block called when the password is encrypted and stored on the same thread.
 */
- (void)storePayload:(NSData *)data attributes:(NSDictionary *)attributes withBlock:(WPKeychainItemOperationBlock)block;

@end
