// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
// swift-module-flags: -target arm64-apple-ios16.2 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name TestResults
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import DeveloperToolsSupport
import Foundation
import PECore
import Swift
import SwiftUI
@_exported import TestResults
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct IncrementalLoadingTracker : Swift.Codable {
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
@_inheritsConvenienceInitializers @objc public class PETestResultsComponentAPI : ObjectiveC.NSObject, PECore.PETestResultsComponentAPIProtocol {
  @objc public static var testResultViewedNotification: Swift.String {
    @objc get
  }
  @objc public static var organizationLinkUpdatedNotification: Swift.String {
    @objc get
  }
  @objc public static var communityRefreshBannerNeedUpdate: Swift.String {
    @objc get
  }
  @objc public static var communityNotificationRefreshBannerUpdateKey: Swift.String {
    @objc get
  }
  public static var communityNotificationShouldRefreshH2GData: Swift.String {
    get
  }
  @objc public func getMOTestResultModeQSP() -> Swift.String
  @objc public func getMOTestResultOrgIdQSP() -> Swift.String
  @objc public func getMOTestResultEOrderIDQSP() -> Swift.String
  @objc public func hasAccessForTestResults(_ patientContext: PECore.PEPatientContext) -> PECore.PEComponentAccessResult
  @objc public func hasAccessForOutpatientTestResults(_ patientContext: PECore.PEPatientContext) -> PECore.PEComponentAccessResult
  @objc public func hasAccessForMOInpatientTestResults(_ encounterContext: PECore.PEEncounterContext) -> PECore.PEComponentAccessResult
  @objc public func hasAccessForMOTestResults(_ patientContext: PECore.PEPatientContext) -> PECore.PEComponentAccessResult
  @objc public func shouldUseMOTestResultDetails(_ patientContext: PECore.PEPatientContext, deepLinkUrl: Swift.String?) -> Swift.Bool
  @objc public func getInpatientTestResultsViewController(_ encounterContext: PECore.PEEncounterContext, viewControllerTitle: Swift.String?) -> UIKit.UIViewController?
  @objc public func getTestResultsViewController(_ patientContext: PECore.PEPatientContext, viewControllerTitle: Swift.String?) -> UIKit.UIViewController?
  @objc public func getTestResultDetailsViewController(_ patientContext: PECore.PEPatientContext, viewControllerTitle: Swift.String?, params: [Swift.String : Swift.String]) -> UIKit.UIViewController?
  @objc public func getMOTestResultDetailsViewController(_ patientContext: PECore.PEPatientContext, viewControllerTitle: Swift.String?, params: [Swift.String : Swift.String]) -> UIKit.UIViewController?
  @objc override dynamic public init()
  @objc deinit
}
