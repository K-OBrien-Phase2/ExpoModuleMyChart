// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
// swift-module-flags: -target arm64-apple-ios16.2 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name Medications
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import DeveloperToolsSupport
import Foundation
@_exported import Medications
import PECore
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public enum OrderLinkType : Swift.Int, Swift.Codable {
  case blank
  case followedBy
  case or
  case and
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @objc public class PEMedicationsComponentAPI : ObjectiveC.NSObject, PECore.PEMedicationsComponentAPIProtocol {
  @objc public func hasAccessForOutpatientMedications(_ patientContext: PECore.PEPatientContext) -> PECore.PEComponentAccessResult
  @objc public func hasAccessForEncounterSpecificMedications(_ encounterContext: PECore.PEEncounterContext) -> PECore.PEComponentAccessResult
  @objc public func getMyChartNowMedicationsViewController(_ encounterContext: PECore.PEEncounterContext, viewControllerTitle: Swift.String?) -> UIKit.UIViewController?
  @objc override dynamic public init()
  @objc deinit
}
extension Medications.OrderLinkType : Swift.Equatable {}
extension Medications.OrderLinkType : Swift.Hashable {}
extension Medications.OrderLinkType : Swift.RawRepresentable {}
